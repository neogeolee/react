{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bigdata\\\\Desktop\\\\Workspace\\\\React\\\\news-app\\\\src\\\\components\\\\NewsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport axios from \"axios\";\nimport \"./NewsList.css\"; //샘플데이터\n\nconst sampleArticle = {\n  title: \"제목입니다.\",\n  description: \"내용입니다.\",\n  url: \"https://google.com\",\n  urlToImage: \"https://via.placeholder.com/160\"\n};\n\nconst NewsList = ({\n  category\n}) => {\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false); // 최초 Mount 될때, category 상태값이 변경 될때 마다 실행\n\n  useEffect(() => {\n    getArticles();\n  }, [category]);\n\n  const getArticles = async () => {\n    setLoading(true);\n    const query = category === \"all\" ? \"\" : \"&category=\" + category;\n    const response = await axios.get(\"http://newsapi.org/v2/top-headlines?country=kr&apiKey=80b1bb2ed4a84f7293638e00f695f6f8\" + query);\n    setArticles(response.data.articles);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NewsList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"\\uB274\\uC2A4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, articles && articles.map((article, index) => {\n    return /*#__PURE__*/React.createElement(NewsItem, {\n      key: index,\n      article: article,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }\n    });\n  }));\n};\n\nexport default NewsList;","map":{"version":3,"sources":["C:/Users/bigdata/Desktop/Workspace/React/news-app/src/components/NewsList.js"],"names":["React","useEffect","useState","NewsItem","axios","sampleArticle","title","description","url","urlToImage","NewsList","category","articles","setArticles","loading","setLoading","getArticles","query","response","get","data","map","article","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,QADa;AAEpBC,EAAAA,WAAW,EAAE,QAFO;AAGpBC,EAAAA,GAAG,EAAE,oBAHe;AAIpBC,EAAAA,UAAU,EAAE;AAJQ,CAAtB;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC,CAFiC,CAIjC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACL,QAAD,CAFM,CAAT;;AAIA,QAAMK,WAAW,GAAG,YAAY;AAC9BD,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAME,KAAK,GAAGN,QAAQ,KAAK,KAAb,GAAqB,EAArB,GAA0B,eAAeA,QAAvD;AAEA,UAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CACrB,2FACEF,KAFmB,CAAvB;AAKAJ,IAAAA,WAAW,CAACK,QAAQ,CAACE,IAAT,CAAcR,QAAf,CAAX;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAZD;;AAcA,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,IACPA,QAAQ,CAACS,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/B,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,OAAO,EAAED,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAFJ,CADF;AAQD,CAnCD;;AAqCA,eAAeZ,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport axios from \"axios\";\r\nimport \"./NewsList.css\";\r\n\r\n//샘플데이터\r\nconst sampleArticle = {\r\n  title: \"제목입니다.\",\r\n  description: \"내용입니다.\",\r\n  url: \"https://google.com\",\r\n  urlToImage: \"https://via.placeholder.com/160\",\r\n};\r\n\r\nconst NewsList = ({ category }) => {\r\n  const [articles, setArticles] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 최초 Mount 될때, category 상태값이 변경 될때 마다 실행\r\n  useEffect(() => {\r\n    getArticles();\r\n  }, [category]);\r\n\r\n  const getArticles = async () => {\r\n    setLoading(true);\r\n\r\n    const query = category === \"all\" ? \"\" : \"&category=\" + category;\r\n\r\n    const response = await axios.get(\r\n      \"http://newsapi.org/v2/top-headlines?country=kr&apiKey=80b1bb2ed4a84f7293638e00f695f6f8\" +\r\n        query\r\n    );\r\n\r\n    setArticles(response.data.articles);\r\n    setLoading(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"NewsList\">뉴스를 불러오는 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewsList\">\r\n      {articles &&\r\n        articles.map((article, index) => {\r\n          return <NewsItem key={index} article={article} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n"]},"metadata":{},"sourceType":"module"}