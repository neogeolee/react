{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bigdata\\\\Desktop\\\\Workspace\\\\React\\\\ch07\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LifeCycleCompo from \"./components/LifeCycleCompo\";\n/*\n  날짜 : 2020/10/21\n  이름 : 이태훈\n  내용 : 컴포넌트 생명주기 실습하기\n\n  컴포넌트 생명주기\n    - 리액트의 모든 컴포넌트는 초기화(mount)단계, 업데이트(update)단계, 소멸(unmount)단계를 거친다.\n    - 각 단계 별로 자동으로 실행되는 함수를 생명주기 함수라고 한다.\n    - 생명주기 함수는 클래스 컴포넌트에서만 동작한다.\n\n    초기화(mount) 단계 \n      - DOM이 생성되고 브라우저에 컴포넌트가 나타나는 단계\n      - constructor -> getDerivedStartFromProps -> render -> componentDidMount 순서로 실행\n\n    업데이트(update) 단계\n      - 초기화 단계와 소멸단계 사이에서 계속 반복되는 단계\n      - 컴포넌트의 속성(props)값, 상태(state)값이 변경되면 자동으로 업데이트 함수 실행\n      - getDerivedStartFromProps -> shouldComponentUpdate -> render -> getSnampshotBeforeUpdate -> componentUpdate\n\n    소멸(unmount)단계\n      - 마운트 단계의 반대과정으로 컴포넌트가 브라우저에서 제거될때 실행되는 단계\n      - componentWillUnmount 함수실행\n*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.inputref = React.createRef();\n    this.state = {\n      tit: \"제목 입력\"\n    };\n\n    this.onClickHandler = () => {\n      this.setState({\n        tit: this.inputref.current.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"ch07. \\uB9AC\\uC561\\uD2B8 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uC0DD\\uBA85\\uC8FC\\uAE30\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.inputref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"\\uC0B4\\uC0B4\\uB20C\\uB7EC\\uC918 \\uC544\\uD763...\\uD763!!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"\\uC785\\uB825 : \", this.state.tit), /*#__PURE__*/React.createElement(LifeCycleCompo, {\n      tit: this.state.tit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bigdata/Desktop/Workspace/React/ch07/src/App.js"],"names":["React","Component","LifeCycleCompo","App","inputref","createRef","state","tit","onClickHandler","setState","current","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,QAD0B,GACfJ,KAAK,CAACK,SAAN,EADe;AAAA,SAG1BC,KAH0B,GAGlB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAHkB;;AAAA,SAK1BC,cAL0B,GAKT,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,GAAG,EAAE,KAAKH,QAAL,CAAcM,OAAd,CAAsBC;AAA7B,OAAd;AACD,KAPyB;AAAA;;AAQ1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKR,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKI,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAS,KAAKF,KAAL,CAAWC,GAApB,CAJF,eAKE,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAlByB;;AAqB5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LifeCycleCompo from \"./components/LifeCycleCompo\";\n/*\n  날짜 : 2020/10/21\n  이름 : 이태훈\n  내용 : 컴포넌트 생명주기 실습하기\n\n  컴포넌트 생명주기\n    - 리액트의 모든 컴포넌트는 초기화(mount)단계, 업데이트(update)단계, 소멸(unmount)단계를 거친다.\n    - 각 단계 별로 자동으로 실행되는 함수를 생명주기 함수라고 한다.\n    - 생명주기 함수는 클래스 컴포넌트에서만 동작한다.\n\n    초기화(mount) 단계 \n      - DOM이 생성되고 브라우저에 컴포넌트가 나타나는 단계\n      - constructor -> getDerivedStartFromProps -> render -> componentDidMount 순서로 실행\n\n    업데이트(update) 단계\n      - 초기화 단계와 소멸단계 사이에서 계속 반복되는 단계\n      - 컴포넌트의 속성(props)값, 상태(state)값이 변경되면 자동으로 업데이트 함수 실행\n      - getDerivedStartFromProps -> shouldComponentUpdate -> render -> getSnampshotBeforeUpdate -> componentUpdate\n\n    소멸(unmount)단계\n      - 마운트 단계의 반대과정으로 컴포넌트가 브라우저에서 제거될때 실행되는 단계\n      - componentWillUnmount 함수실행\n*/\n\nclass App extends Component {\n  inputref = React.createRef();\n\n  state = { tit: \"제목 입력\" };\n\n  onClickHandler = () => {\n    this.setState({ tit: this.inputref.current.value });\n  };\n  render() {\n    return (\n      <div>\n        <h3>ch07. 리액트 컴포넌트 생명주기</h3>\n        <input type=\"text\" ref={this.inputref} />\n        <button onClick={this.onClickHandler}>살살눌러줘 아흣...흣!!</button>\n        <p>입력 : {this.state.tit}</p>\n        <LifeCycleCompo tit={this.state.tit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}