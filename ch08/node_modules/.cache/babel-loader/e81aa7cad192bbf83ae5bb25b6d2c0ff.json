{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bigdata\\\\Desktop\\\\Workspace\\\\React\\\\ch08\\\\src\\\\component\\\\UseRefCompo.js\";\nimport React, { useRef, useState } from \"react\";\n\nconst UseRefCompo = () => {\n  const [list, setList] = useState([]);\n  const [value, setValue] = useState(\"\"); //ref 생성\n\n  const inputRef = useRef();\n\n  const onClicked = () => {\n    const nextList = list.concat(inputRef.current.value);\n    setList(nextList);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"UseRefCompo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"UseRefCompo\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, list.map((value, index) => {\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, value);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: inputRef,\n    value: value,\n    onChange: onClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default UseRefCompo;","map":{"version":3,"sources":["C:/Users/bigdata/Desktop/Workspace/React/ch08/src/component/UseRefCompo.js"],"names":["React","useRef","useState","UseRefCompo","list","setList","value","setValue","inputRef","onClicked","nextList","concat","current","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAFwB,CAIxB;;AACA,QAAMM,QAAQ,GAAGP,MAAM,EAAvB;;AACA,QAAMQ,SAAS,GAAG,MAAM;AACtB,UAAMC,QAAQ,GAAGN,IAAI,CAACO,MAAL,CAAYH,QAAQ,CAACI,OAAT,CAAiBN,KAA7B,CAAjB;AACAD,IAAAA,OAAO,CAACK,QAAD,CAAP;AACAH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACS,GAAL,CAAS,CAACP,KAAD,EAAQQ,KAAR,KAAkB;AAC1B;AAAA;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBR,KAAjB;AACD,GAFA,CADH,CAFF,eAOE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEE,QAAxB;AAAkC,IAAA,KAAK,EAAEF,KAAzC;AAAgD,IAAA,QAAQ,EAAEG,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAtBD;;AAwBA,eAAeN,WAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nconst UseRefCompo = () => {\r\n  const [list, setList] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  //ref 생성\r\n  const inputRef = useRef();\r\n  const onClicked = () => {\r\n    const nextList = list.concat(inputRef.current.value);\r\n    setList(nextList);\r\n    setValue(\"\");\r\n  };\r\n  return (\r\n    <div className=\"UseRefCompo\">\r\n      <h4>UseRefCompo</h4>\r\n      <ul>\r\n        {list.map((value, index) => {\r\n          <li key={index}>{value}</li>;\r\n        })}\r\n      </ul>\r\n      <input type=\"text\" ref={inputRef} value={value} onChange={onClicked} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseRefCompo;\r\n"]},"metadata":{},"sourceType":"module"}