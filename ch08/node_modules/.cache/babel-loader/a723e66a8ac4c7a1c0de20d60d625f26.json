{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bigdata\\\\Desktop\\\\Workspace\\\\React\\\\ch08\\\\src\\\\App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n/*\n  날짜 : 2020/10/21\n  이름 : 이태훈\n  내용 : 리액트 훅 실습하기\n\n  React Hooks\n    - 함수형 컴포넌트에서 사용되는 특별한 기능을 갖는 함수들 \n    - 훅 함수를 이용해서 함수형 컴포넌트에서도 상태값, 생명주기 함수를 구현할 수 있다.\n\n  useState()\n    - 함수형 컴포넌트에서도 상태값을 관리하는 Hook(기능, 함수)  \n    - 가장 많이 사용하는 리액트 Hook\n  useEffect\n    - 함수형 컴포넌트가 랜더링 될 때 마다 특정 작업을 수행하도록 실행하는 Hook\n    - 클래스형 컴포넌트의 componentDidMount, componentDidUpdate 생명주기 함수와 동일\n  useRef\n    - 함수형 컴포넌트에서 ref 를 생성, 할당할 수 있게 하는 Hook \n */\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"ch08. \\uB9AC\\uC561\\uD2B8 \\uD6C5(React Hooks)\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"1.useState()\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"2.useEffect()\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"3.useRef()\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bigdata/Desktop/Workspace/React/ch08/src/App.js"],"names":["React","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF;AASD;;AAED,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n/*\n  날짜 : 2020/10/21\n  이름 : 이태훈\n  내용 : 리액트 훅 실습하기\n\n  React Hooks\n    - 함수형 컴포넌트에서 사용되는 특별한 기능을 갖는 함수들 \n    - 훅 함수를 이용해서 함수형 컴포넌트에서도 상태값, 생명주기 함수를 구현할 수 있다.\n\n  useState()\n    - 함수형 컴포넌트에서도 상태값을 관리하는 Hook(기능, 함수)  \n    - 가장 많이 사용하는 리액트 Hook\n  useEffect\n    - 함수형 컴포넌트가 랜더링 될 때 마다 특정 작업을 수행하도록 실행하는 Hook\n    - 클래스형 컴포넌트의 componentDidMount, componentDidUpdate 생명주기 함수와 동일\n  useRef\n    - 함수형 컴포넌트에서 ref 를 생성, 할당할 수 있게 하는 Hook \n */\n\nfunction App() {\n  return (\n    <div>\n      <h3>ch08. 리액트 훅(React Hooks)</h3>\n\n      <h4>1.useState()</h4>\n      <h4>2.useEffect()</h4>\n      <h4>3.useRef()</h4>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}